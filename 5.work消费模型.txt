生产者发布消息到队列中，多个生产者共同竞争该队列
1. 生产者发布消息
    // 只有存在消费者消费才会创建队列
    @Test
    public void provider() {
        rabbitTemplate.convertAndSend("hello", "hello world");    //队列名字， 加入的消息
    }

2.多个消费者消费队列
@RabbitListener(queuesToDeclare = @Queue(value = "queueTemp2", autoDelete = "true"))
public void consumer1(User message) {
        System.out.println("message1" + message.getId());
}

@RabbitListener(queuesToDeclare = @Queue(value = "queueTemp2", autoDelete = "true"))
    public void consumer2(User message) {
        System.out.println("message2" + message.getId());
}

存在的问题 
rabbitmq会默认把消息平均分给每个消费者，供消费者平均消费
但如果有的消费者消费的块有的消费的慢， 变会造成某一个消费者不工作， 另一个消费者拼命工作
解决 设置 rabbitmq 分给消费者消息的最大数量
spring.rabbitmq.listener.simple.prefetch=1    每次分发一个消息， 只有消息消费完才能分发消息


