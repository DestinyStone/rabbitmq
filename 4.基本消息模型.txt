生产者发布消息到队列中， 一个消费者直接从队列中获取
实质： 调用了默认的 AMQP default 交换机， 该交换机默认会去寻找相同名字的队列
1. 生产者发布消息
    // 只有存在消费者消费才会创建队列
    @Test
    public void provider() {
        rabbitTemplate.convertAndSend("hello", "hello@ world");    //队列名字， 加入的消息
    }
rabbitTemplate.convertAndSend 第二个参数可传入对象， 当需要该对象能序列化


2. 消费者接收消息
@Component
@RabbitListener(queuesToDeclare = @Queue("hello"))
public class Consumer1 {

    @RabbitHandler
    public void consumer1(String message) {
        System.out.println(message);
    }
}

@Queue详细参数
value: 队列名称  
durable: 是否持久化   String  默认 “true”
autoDelete: 是否在完全消费后自动删除 String  默认“false”， 消费者断开连接


------------------------------------
另一种书写方法
好处： 可书写多个消费者
@Component
public class Consumer1 {

    @RabbitListener(queuesToDeclare = @Queue("hello"))
    public void consumer1(String message) {
        System.out.println(message);
    }

    @RabbitListener(queuesToDeclare = @Queue("hello"))
    public void consumer2(String message) {
        System.out.println(message);
    }
}

